/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trip;

import flugHopur.Flight;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import mock.HotelMock;
import mock.DayTourMock;
//import mock.FlightMock;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author M
 */
public class Window extends javax.swing.JFrame {

    BookingManager bookingManager = new BookingManager();
    FlightSearch flightSearch = new FlightSearch();
    FlightSearch flightSearchArr = new FlightSearch();
    HotelSearch hotelSearch = new HotelSearch();
    DayTourSearch dayTourSearch = new DayTourSearch();
    Validate validate = new Validate();
    BookingDatabase bookingDatabase = new BookingDatabase();
        
    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        compoundPainter1 = new org.jdesktop.swingx.painter.CompoundPainter();
        mainTabbedPane = new javax.swing.JTabbedPane();
        flightsPanel = new javax.swing.JPanel();
        numberOfTicketsComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        fromFlightComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        toFlightComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        depFlightDatePicker = new org.jdesktop.swingx.JXDatePicker();
        arrFlightDatePicker = new org.jdesktop.swingx.JXDatePicker();
        oneWayCheckBox = new javax.swing.JCheckBox();
        flightSearchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jdepFlightResultTable = new javax.swing.JTable();
        nextFromFlightButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jDepFlightTableScrollPane = new javax.swing.JScrollPane();
        jArrFlightResultTable = new javax.swing.JTable();
        hotelsPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        locationHotelComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        roomHotelComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        adultsHotelComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        childrenHotelComboBox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        arrHotelDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel10 = new javax.swing.JLabel();
        depHotelDatePicker = new org.jdesktop.swingx.JXDatePicker();
        hotelSearchButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        hotelResultTable = new javax.swing.JTable();
        nextFromHotelButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        hotelResultTable1 = new javax.swing.JTable();
        dayTourPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        destinationTourComboBox = new javax.swing.JComboBox<>();
        adultTourComboBox = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        dayTourSearchButton = new javax.swing.JButton();
        dayTourDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dayTourResultsTable = new javax.swing.JTable();
        nextFromDayTourButton = new javax.swing.JButton();
        tripTourComboBox = new javax.swing.JComboBox<>();
        customerPanel = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        bookPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mainTabbedPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mainTabbedPaneStateChanged(evt);
            }
        });

        flightsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        numberOfTicketsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9" }));
        numberOfTicketsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfTicketsComboBoxActionPerformed(evt);
            }
        });
        flightsPanel.add(numberOfTicketsComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, 70, -1));

        jLabel1.setText("From");
        flightsPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        fromFlightComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Akureyri", "Reykjavík", "Ísafjörður", "Eigilsstaðir" }));
        flightsPanel.add(fromFlightComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 120, -1));

        jLabel2.setText("To");
        flightsPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, -1, -1));

        toFlightComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Akureyri", "Reykjavík", "Ísafjörður", "Eigilsstaðir" }));
        flightsPanel.add(toFlightComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 120, -1));

        jLabel3.setText("Departure");
        flightsPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jLabel4.setText("Arrival");
        flightsPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, -1));

        depFlightDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depFlightDatePickerActionPerformed(evt);
            }
        });
        flightsPanel.add(depFlightDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        arrFlightDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrFlightDatePickerActionPerformed(evt);
            }
        });
        flightsPanel.add(arrFlightDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, -1, -1));

        oneWayCheckBox.setText("One Way");
        oneWayCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneWayCheckBoxActionPerformed(evt);
            }
        });
        flightsPanel.add(oneWayCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, -1, -1));

        flightSearchButton.setText("Search");
        flightSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightSearchButtonActionPerformed(evt);
            }
        });
        flightsPanel.add(flightSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, -1, -1));

        jdepFlightResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Airline", "Departure", "Time", "Arrival", "Time", "Duration", "Ticket(s)", "Total Price", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jdepFlightResultTable);

        flightsPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 580, 180));

        nextFromFlightButton.setText("Next >");
        nextFromFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextFromFlightButtonActionPerformed(evt);
            }
        });
        flightsPanel.add(nextFromFlightButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 580, -1, -1));

        jLabel16.setText("Number of tickets");
        flightsPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, -1, -1));

        jArrFlightResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Airline", "Departure", "Time", "Arrival", "Time", "Duration", "Ticket(s)", "Total Price", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jDepFlightTableScrollPane.setViewportView(jArrFlightResultTable);

        flightsPanel.add(jDepFlightTableScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 380, 580, 180));

        mainTabbedPane.addTab("Flights", flightsPanel);

        hotelsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Location");
        hotelsPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        locationHotelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Akureyri", "Reykjavík" }));
        hotelsPanel.add(locationHotelComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jLabel6.setText("Room");
        hotelsPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, -1));

        roomHotelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        roomHotelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomHotelComboBoxActionPerformed(evt);
            }
        });
        hotelsPanel.add(roomHotelComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, -1, -1));

        jLabel7.setText("Adults");
        hotelsPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, -1, -1));

        adultsHotelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        hotelsPanel.add(adultsHotelComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, -1, -1));

        jLabel8.setText("Children");
        hotelsPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        childrenHotelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3" }));
        hotelsPanel.add(childrenHotelComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, 70, -1));

        jLabel9.setText("Arrival");
        hotelsPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));
        hotelsPanel.add(arrHotelDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jLabel10.setText("Departure");
        hotelsPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, -1));
        hotelsPanel.add(depHotelDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, -1, -1));

        hotelSearchButton.setText("Search");
        hotelSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelSearchButtonActionPerformed(evt);
            }
        });
        hotelsPanel.add(hotelSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, -1, -1));

        hotelResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Hotel", "City", "Price", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(hotelResultTable);

        hotelsPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 580, 370));

        nextFromHotelButton.setText("Next >");
        nextFromHotelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextFromHotelButtonActionPerformed(evt);
            }
        });
        hotelsPanel.add(nextFromHotelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 580, -1, -1));

        hotelResultTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Hotel", "City", "Price", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(hotelResultTable1);

        hotelsPanel.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 580, 180));

        mainTabbedPane.addTab("Hotels", hotelsPanel);

        dayTourPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setText("Destination");
        dayTourPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        destinationTourComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Akureyri", "Reykjavík" }));
        dayTourPanel.add(destinationTourComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        adultTourComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        dayTourPanel.add(adultTourComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 140, -1, -1));

        jLabel12.setText("Tickets");
        dayTourPanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, -1, -1));

        dayTourSearchButton.setText("Search");
        dayTourSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayTourSearchButtonActionPerformed(evt);
            }
        });
        dayTourPanel.add(dayTourSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, -1, -1));
        dayTourPanel.add(dayTourDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, -1, -1));

        jLabel14.setText("Date");
        dayTourPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, -1));

        jLabel15.setText("Type");
        dayTourPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        dayTourResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Trip", "City", "Time", "Price", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dayTourResultsTable.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(dayTourResultsTable);

        dayTourPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 560, 230));

        nextFromDayTourButton.setText("Next >");
        nextFromDayTourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextFromDayTourButtonActionPerformed(evt);
            }
        });
        dayTourPanel.add(nextFromDayTourButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 440, -1, -1));

        tripTourComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blue Lagoon", "South Shore" }));
        dayTourPanel.add(tripTourComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 130, -1));

        mainTabbedPane.addTab("DayTours", dayTourPanel);

        customerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setText("Name");
        customerPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));
        customerPanel.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 150, -1));

        jLabel18.setText("SSN");
        customerPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));
        customerPanel.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 150, -1));

        jLabel19.setText("Phone");
        customerPanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));
        customerPanel.add(jTextField3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 110, -1));

        jButton1.setText("Next >");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        customerPanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, -1));

        jLabel20.setForeground(new java.awt.Color(255, 0, 51));
        jLabel20.setText("Invalid Name");
        customerPanel.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, -1, -1));

        jLabel21.setForeground(new java.awt.Color(255, 0, 51));
        jLabel21.setText("Invalid SSN");
        customerPanel.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, -1, -1));

        jLabel22.setForeground(new java.awt.Color(255, 0, 51));
        jLabel22.setText("Invalid Phone");
        customerPanel.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, -1, -1));

        mainTabbedPane.addTab("Customer", customerPanel);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane4.setViewportView(jTextArea1);

        jButton2.setText("Book");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bookPanelLayout = new javax.swing.GroupLayout(bookPanel);
        bookPanel.setLayout(bookPanelLayout);
        bookPanelLayout.setHorizontalGroup(
            bookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 606, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        bookPanelLayout.setVerticalGroup(
            bookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bookPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(30, 30, 30))
        );

        mainTabbedPane.addTab("Book", bookPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTabbedPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void flightSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightSearchButtonActionPerformed
        // Þyrfti að athuga hvort depFlightDatePicker og arrFlightDatePicker
        // sé ekki null eða annað en Date
        ArrayList<Flight> results = flightSearch.search(depFlightDatePicker.getDate(), fromFlightComboBox.getSelectedItem().toString(), toFlightComboBox.getSelectedItem().toString(), Integer.parseInt(numberOfTicketsComboBox.getItemAt(numberOfTicketsComboBox.getSelectedIndex())) );
       
        if(results.get(0).getTotalPrice()!= 0) {
            createFlightTable(results, jdepFlightResultTable);
            
        }
        
        if (!oneWayCheckBox.isSelected() ){
            
            ArrayList<Flight> resultsArr = flightSearchArr.search(arrFlightDatePicker.getDate(), toFlightComboBox.getSelectedItem().toString(), fromFlightComboBox.getSelectedItem().toString(), Integer.parseInt(numberOfTicketsComboBox.getItemAt(numberOfTicketsComboBox.getSelectedIndex())));

             if(results.get(0).getTotalPrice()!= 0) {
                 createFlightTable(resultsArr, jArrFlightResultTable);

             }
        }
    }//GEN-LAST:event_flightSearchButtonActionPerformed

    private void oneWayCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneWayCheckBoxActionPerformed
        oneWay();
    }//GEN-LAST:event_oneWayCheckBoxActionPerformed

    private void nextFromFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextFromFlightButtonActionPerformed
        // ??
        addSelectedFlights(jdepFlightResultTable, flightSearch);
        if (!oneWayCheckBox.isSelected()) addSelectedFlights(jArrFlightResultTable, flightSearchArr);
        showPanel(hotelsPanel);
    }//GEN-LAST:event_nextFromFlightButtonActionPerformed

    private void hotelSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelSearchButtonActionPerformed
        HotelMock[] results = hotelSearch.search(arrHotelDatePicker.getDate(), locationHotelComboBox.getSelectedItem().toString());
        createHotelTable(results);
    }//GEN-LAST:event_hotelSearchButtonActionPerformed

    private void nextFromHotelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextFromHotelButtonActionPerformed
        addSelectedHotel();
        showPanel(dayTourPanel);
    }//GEN-LAST:event_nextFromHotelButtonActionPerformed

    private void dayTourSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayTourSearchButtonActionPerformed
        DayTourMock[] results = dayTourSearch.search(dayTourDatePicker.getDate(),destinationTourComboBox.getSelectedItem().toString());
        createDayTourTable(results);
    }//GEN-LAST:event_dayTourSearchButtonActionPerformed

    private void nextFromDayTourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextFromDayTourButtonActionPerformed
        addSelectedDayTours();
        showPanel(customerPanel);
    }//GEN-LAST:event_nextFromDayTourButtonActionPerformed

    private void roomHotelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomHotelComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomHotelComboBoxActionPerformed

    private void numberOfTicketsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfTicketsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfTicketsComboBoxActionPerformed

    private void depFlightDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depFlightDatePickerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_depFlightDatePickerActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addCustomer();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void mainTabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mainTabbedPaneStateChanged
        if(mainTabbedPane.getSelectedIndex()==4)
            showBooking();
    }//GEN-LAST:event_mainTabbedPaneStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        addBookingToDatabase();
    }//GEN-LAST:event_jButton2ActionPerformed


    private void arrFlightDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrFlightDatePickerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arrFlightDatePickerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> adultTourComboBox;
    private javax.swing.JComboBox<String> adultsHotelComboBox;
    private org.jdesktop.swingx.JXDatePicker arrFlightDatePicker;
    private org.jdesktop.swingx.JXDatePicker arrHotelDatePicker;
    private javax.swing.JPanel bookPanel;
    private javax.swing.JComboBox<String> childrenHotelComboBox;
    private org.jdesktop.swingx.painter.CompoundPainter compoundPainter1;
    private javax.swing.JPanel customerPanel;
    private org.jdesktop.swingx.JXDatePicker dayTourDatePicker;
    private javax.swing.JPanel dayTourPanel;
    private javax.swing.JTable dayTourResultsTable;
    private javax.swing.JButton dayTourSearchButton;
    private org.jdesktop.swingx.JXDatePicker depFlightDatePicker;
    private org.jdesktop.swingx.JXDatePicker depHotelDatePicker;
    private javax.swing.JComboBox<String> destinationTourComboBox;
    private javax.swing.JButton flightSearchButton;
    private javax.swing.JPanel flightsPanel;
    private javax.swing.JComboBox<String> fromFlightComboBox;
    private javax.swing.JTable hotelResultTable;
    private javax.swing.JTable hotelResultTable1;
    private javax.swing.JButton hotelSearchButton;
    private javax.swing.JPanel hotelsPanel;
    private javax.swing.JTable jArrFlightResultTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jDepFlightTableScrollPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTable jdepFlightResultTable;
    private javax.swing.JComboBox<String> locationHotelComboBox;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JButton nextFromDayTourButton;
    private javax.swing.JButton nextFromFlightButton;
    private javax.swing.JButton nextFromHotelButton;
    private javax.swing.JComboBox<String> numberOfTicketsComboBox;
    private javax.swing.JCheckBox oneWayCheckBox;
    private javax.swing.JComboBox<String> roomHotelComboBox;
    private javax.swing.JComboBox<String> toFlightComboBox;
    private javax.swing.JComboBox<String> tripTourComboBox;
    // End of variables declaration//GEN-END:variables
    
    private void init() {
        jdepFlightResultTable.getColumnModel().getColumn(0).setMinWidth(0);
        jdepFlightResultTable.getColumnModel().getColumn(0).setMaxWidth(0);
        jArrFlightResultTable.getColumnModel().getColumn(0).setMinWidth(0);
        jArrFlightResultTable.getColumnModel().getColumn(0).setMaxWidth(0);
        
        hotelResultTable.getColumnModel().getColumn(0).setMinWidth(0);
        hotelResultTable.getColumnModel().getColumn(0).setMaxWidth(0);
        
        dayTourResultsTable.getColumnModel().getColumn(0).setMinWidth(0);
        dayTourResultsTable.getColumnModel().getColumn(0).setMaxWidth(0);
        
        depFlightDatePicker.setDate(new Date());
        arrFlightDatePicker.setDate(new Date());
        
        hideLabels();
        //mainTabbedPane.setEnabledAt(4, false);
    }
    
    private void createFlightTable(ArrayList<Flight> x, JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        if(x==null) return;
        
        for(int i=0; i<x.size(); i++){
            if(x.get(i)==null){return;}
            model.addRow(toObj(x.get(i),i));
        }
    }
    
    private void oneWay(){
        if(oneWayCheckBox.isSelected()){
            jDepFlightTableScrollPane.setVisible(false);
            arrFlightDatePicker.setEnabled(false);
        }
        else{
            arrFlightDatePicker.setEnabled(true);
            jDepFlightTableScrollPane.setVisible(true);
        }
    }
    
    private void addSelectedFlights(JTable table, FlightSearch s) {
        for (int i = 0; i < table.getRowCount(); i++) {
            boolean isChecked = (Boolean) table.getValueAt(i, 9);

            if (isChecked) {
                int index = (int) table.getValueAt(i, 0);
                Flight tmp = s.getFlight(index);
                bookingManager.addFlight(tmp);
            }

        }
    }
    
    private void showPanel(JPanel panel){
        mainTabbedPane.setSelectedComponent(panel);
    }
    
    private void createHotelTable(HotelMock[] x){
        DefaultTableModel model = (DefaultTableModel) hotelResultTable.getModel();
        model.setRowCount(0);
        if(x==null) return;
        
        for(int i=0; i<x.length; i++){
            if(x[i]==null){return;}
            model.addRow(hToObj(x[i],i));
        }
    }
    
    private void addSelectedHotel() {
        for (int i = 0; i < hotelResultTable.getRowCount(); i++) {
            boolean isChecked = (Boolean) hotelResultTable.getValueAt(i, 4);

            if (isChecked) {
                int index = (int) hotelResultTable.getValueAt(i, 0);
                HotelMock tmp = hotelSearch.getHotel(index);
                bookingManager.setHotel(tmp);
            }

        }
    }
    
    private void createDayTourTable(DayTourMock[] x){
        DefaultTableModel model = (DefaultTableModel) dayTourResultsTable.getModel();
        model.setRowCount(0);
        if(x==null) return;
        
        for(int i=0; i<x.length; i++){
            if(x[i]==null){return;}
            model.addRow(dToObj(x[i],i));
        }
    }
    
    private void addSelectedDayTours() {
        for (int i = 0; i < dayTourResultsTable.getRowCount(); i++) {
            boolean isChecked = (Boolean) dayTourResultsTable.getValueAt(i, 5);

            if (isChecked) {
                int index = (int) dayTourResultsTable.getValueAt(i, 0);
                DayTourMock tmp = dayTourSearch.getDayTour(index);
                bookingManager.addDayTour(tmp);
            }

        }
    }
    
    private void addCustomer(){
        String name = jTextField1.getText().trim();
        String ssn = jTextField2.getText().trim();
        String phone = jTextField3.getText().trim();
        if(!validateCustomer(name,ssn,phone)) return;
        
        bookingManager.updateCustomer(name, ssn, toInt(phone));
        showPanel(bookPanel);
    }
    
    private boolean validateCustomer(String name, String ssn, String phone){
        boolean b = true;
        hideLabels();
        if(!validate.name(name)){
            jLabel20.setVisible(true);
            b=false;
        }
        if(!validate.ssn(ssn)){
            jLabel21.setVisible(true);
            b=false;
        }
        if(!validate.phone(phone)){
            jLabel22.setVisible(true);
            b=false;
        }
        return b;
    }
    
    private void showBooking(){
        Booking booking = bookingManager.getBookings();
        
        String name = booking.customer.getName();
        String ssn = booking.customer.getId();
        int phone = booking.customer.getPhone();
        
        String s="";
        s+="Name: "+name+"\n"+"SSN: "+ssn+"\n"+"Phone: "+phone+"\n\n";
        
        ArrayList<Flight> fb = booking.flight;
        for(int i=0; i<fb.size(); i++){
            if(i==0){
                s+="Flights\n\n";
                s+="Airl\tFlight\tDepartur\tTime\tDate\tArrival\tTime\tDuration\tMax Luggage\tFood\tPassengers\tPrice\n";
                s+="----------\t-----------\t----------\t----------\t---------\t---------\t---------\t---------\t---------\t---------\t---------\t---------\n";
            }
            Flight y = fb.get(i);
            s+= y.getAirline()+"\t"+y.getFlightNumber()+"\t"+
                y.getDepartureLocation()+"\t"+y.getDepartureTime()+
                "\t "+y.getDepartureDate()+"\t"+y.getArrivalLocation()+
                "\t"+y.getArrivalTime()+"\t"+y.getDuration()+"\t"+
                y.getMaximumLuggageWeight()+"\t"+y.getFoodInfo()+
                "\t"+y.getNumberOfPassengers()+"\t"+y.getTotalPrice()+"\n";
        }
        
        HotelMock hb = booking.hotel;
        if(hb!=null){
            s+="\n\nHotel\n\n";
            s+="Name\tCity\tPrice\tDate\n";
            s+="----------\t-----------\t----------\t----------\n";
            s+=hb.name+"\t"+hb.city+"\t"+hb.price+"\t"+dts(hb.date);
        }
        
        ArrayList<DayTourMock> db = booking.daytour;
        for(int i=0; i<db.size(); i++){
            if(i==0){
                s+="\n\nDay Tours\n\n";
                s+="Name\tCity\tPrice\tTime\tDate\n";
                s+="----------\t-----------\t----------\t----------\t---------\n";
            }
            DayTourMock y = db.get(i);
            s+= y.trip+"\t"+y.city+"\t"+y.price+"\t"+y.time+"\t"+dts(y.date)+"\n";
        }
            
        
        jTextArea1.setText(s);
    }
    
    private void addBookingToDatabase(){
        Booking booking = bookingManager.getBookings();
        ArrayList<Flight> flights = booking.flight;
        HotelMock hotel = booking.hotel;
        ArrayList<DayTourMock> daytours = booking.daytour;
        
        for(int i=0; i<flights.size(); i++){
            bookingDatabase.addBooking(booking.customer, "f", flights.get(i).getID());
        }
        
        if(hotel!=null)
            bookingDatabase.addBooking(booking.customer, "h", hotel.id);
        
        for(int i=0; i<daytours.size(); i++){
            bookingDatabase.addBooking(booking.customer, "d", daytours.get(i).id);
        }
        
    }
    
    private void hideLabels(){
        jLabel20.setVisible(false);
        jLabel21.setVisible(false);
        jLabel22.setVisible(false);
    }
        
    //------------------- Hjálparföll ------------------------------
    private Object[] toObj(Flight x,int i){
        return new Object[]{i,x.getAirline(),x.getDepartureLocation(),x.getDepartureTime(),
                x.getArrivalLocation(),x.getArrivalTime(),x.getDuration(),x.getNumberOfPassengers(),x.getTotalPrice(),false};
    }
    
    private String brief(String x){
        if("Akureyri".equals(x))
            return "aey";
        else if("Reykjavík".equals(x))
            return "rvk";
        return "";
    }
    
    private Object[] hToObj(HotelMock x, int i){
        return new Object[]{i,x.name,x.city,x.price,false};
    }
    
    private Object[] dToObj(DayTourMock x, int i){
        return new Object[]{i,x.trip,x.city,x.time,x.price,false};
    }
    
    private void echo(Object o){
        System.out.println(o);
    }
    
    private int toInt(String s){
        return Integer.parseInt(s.replaceAll("[- ]", ""));
    }
    
    private String dts(Date d){
        DateFormat formatter = new SimpleDateFormat("MM-dd-yyyy");
        return formatter.format(d);
    }
    //----------------------------------------------------------------
    
    
}
