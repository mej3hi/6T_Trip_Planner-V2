/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trip;

import java.util.Date;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author M
 */
public class Window extends javax.swing.JFrame {

    BookingManager bookingManager = new BookingManager();
    FlightSearch flightSearch = new FlightSearch();
    HotelSearch hotelSearch = new HotelSearch();
    DayTourSearch dayTourSearch = new DayTourSearch();
    /**
     * Creates new form Window
     */
    public Window() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        compoundPainter1 = new org.jdesktop.swingx.painter.CompoundPainter();
        mainTabbedPane = new javax.swing.JTabbedPane();
        flightsPanel = new javax.swing.JPanel();
        numberOfTicketsComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        fromFlightComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        toFlightComboBox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        depFlightDatePicker = new org.jdesktop.swingx.JXDatePicker();
        arrFlightDatePicker = new org.jdesktop.swingx.JXDatePicker();
        oneWayCheckBox = new javax.swing.JCheckBox();
        flightSearchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        flightResultTable = new javax.swing.JTable();
        nextFromFlightButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        hotelsPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        locationHotelComboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        roomHotelComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        adultsHotelComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        childrenHotelComboBox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        arrHotelDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel10 = new javax.swing.JLabel();
        depHotelDatePicker = new org.jdesktop.swingx.JXDatePicker();
        hotelSearchButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        hotelResultTable = new javax.swing.JTable();
        nextFromHotelButton = new javax.swing.JButton();
        dayTourPanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        destinationTourComboBox = new javax.swing.JComboBox<>();
        adultTourComboBox = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        childrenTourComboBox = new javax.swing.JComboBox<>();
        dayTourSearchButton = new javax.swing.JButton();
        dayTourDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dayTourResultsTable = new javax.swing.JTable();
        nextFromDayTourButton = new javax.swing.JButton();
        tripTourComboBox = new javax.swing.JComboBox<>();
        customerPanel = new javax.swing.JPanel();
        bookPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        flightsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        numberOfTicketsComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9" }));
        numberOfTicketsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numberOfTicketsComboBoxActionPerformed(evt);
            }
        });
        flightsPanel.add(numberOfTicketsComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, 70, -1));

        jLabel1.setText("From");
        flightsPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        fromFlightComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Akureyri", "Reykjavík" }));
        flightsPanel.add(fromFlightComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 120, -1));

        jLabel2.setText("To");
        flightsPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, -1, -1));

        toFlightComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Akureyri", "Reykjavík" }));
        flightsPanel.add(toFlightComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 120, -1));

        jLabel3.setText("Departure");
        flightsPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        jLabel4.setText("Arrival");
        flightsPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, -1));

        depFlightDatePicker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depFlightDatePickerActionPerformed(evt);
            }
        });
        flightsPanel.add(depFlightDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));
        flightsPanel.add(arrFlightDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, -1, -1));

        oneWayCheckBox.setText("One Way");
        oneWayCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneWayCheckBoxActionPerformed(evt);
            }
        });
        flightsPanel.add(oneWayCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, -1, -1));

        flightSearchButton.setText("Search");
        flightSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightSearchButtonActionPerformed(evt);
            }
        });
        flightsPanel.add(flightSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 140, -1, -1));

        flightResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Airline", "Departure", "Arrival", "Duration", "Price", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(flightResultTable);

        flightsPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 190, 560, 240));

        nextFromFlightButton.setText("Next >");
        nextFromFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextFromFlightButtonActionPerformed(evt);
            }
        });
        flightsPanel.add(nextFromFlightButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 450, -1, -1));

        jLabel16.setText("Number of tickets");
        flightsPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, -1, -1));

        mainTabbedPane.addTab("Flights", flightsPanel);

        hotelsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Location");
        hotelsPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        locationHotelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Akureyri", "Reykjavík" }));
        hotelsPanel.add(locationHotelComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jLabel6.setText("Room");
        hotelsPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, -1));

        roomHotelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        roomHotelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roomHotelComboBoxActionPerformed(evt);
            }
        });
        hotelsPanel.add(roomHotelComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, -1, -1));

        jLabel7.setText("Adults");
        hotelsPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, -1, -1));

        adultsHotelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        hotelsPanel.add(adultsHotelComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 60, -1, -1));

        jLabel8.setText("Children");
        hotelsPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, -1, -1));

        childrenHotelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3" }));
        hotelsPanel.add(childrenHotelComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 60, 70, -1));

        jLabel9.setText("Arrival");
        hotelsPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));
        hotelsPanel.add(arrHotelDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        jLabel10.setText("Departure");
        hotelsPanel.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 120, -1, -1));
        hotelsPanel.add(depHotelDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 140, -1, -1));

        hotelSearchButton.setText("Search");
        hotelSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelSearchButtonActionPerformed(evt);
            }
        });
        hotelsPanel.add(hotelSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 140, -1, -1));

        hotelResultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Hotel", "City", "Price", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(hotelResultTable);

        hotelsPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 570, 240));

        nextFromHotelButton.setText("Next >");
        nextFromHotelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextFromHotelButtonActionPerformed(evt);
            }
        });
        hotelsPanel.add(nextFromHotelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 440, -1, -1));

        mainTabbedPane.addTab("Hotels", hotelsPanel);

        dayTourPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setText("Destination");
        dayTourPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        destinationTourComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Akureyri", "Reykjavík" }));
        dayTourPanel.add(destinationTourComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        adultTourComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        dayTourPanel.add(adultTourComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, -1, -1));

        jLabel12.setText("Adults");
        dayTourPanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, -1, -1));

        jLabel13.setText("Children");
        dayTourPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, -1, -1));

        childrenTourComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3" }));
        dayTourPanel.add(childrenTourComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, -1, -1));

        dayTourSearchButton.setText("Search");
        dayTourSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dayTourSearchButtonActionPerformed(evt);
            }
        });
        dayTourPanel.add(dayTourSearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, -1, -1));
        dayTourPanel.add(dayTourDatePicker, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, -1, -1));

        jLabel14.setText("Date");
        dayTourPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, -1));

        jLabel15.setText("Trip");
        dayTourPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        dayTourResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Trip", "City", "Time", "Price", "Select"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        dayTourResultsTable.setColumnSelectionAllowed(true);
        jScrollPane3.setViewportView(dayTourResultsTable);

        dayTourPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 560, 230));

        nextFromDayTourButton.setText("Next >");
        nextFromDayTourButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextFromDayTourButtonActionPerformed(evt);
            }
        });
        dayTourPanel.add(nextFromDayTourButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 440, -1, -1));

        tripTourComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Blue Lagoon", "South Shore" }));
        dayTourPanel.add(tripTourComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 130, -1));

        mainTabbedPane.addTab("DayTours", dayTourPanel);

        javax.swing.GroupLayout customerPanelLayout = new javax.swing.GroupLayout(customerPanel);
        customerPanel.setLayout(customerPanelLayout);
        customerPanelLayout.setHorizontalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 606, Short.MAX_VALUE)
        );
        customerPanelLayout.setVerticalGroup(
            customerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );

        mainTabbedPane.addTab("Customer", customerPanel);

        javax.swing.GroupLayout bookPanelLayout = new javax.swing.GroupLayout(bookPanel);
        bookPanel.setLayout(bookPanelLayout);
        bookPanelLayout.setHorizontalGroup(
            bookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 606, Short.MAX_VALUE)
        );
        bookPanelLayout.setVerticalGroup(
            bookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 570, Short.MAX_VALUE)
        );

        mainTabbedPane.addTab("Book", bookPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTabbedPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void flightSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightSearchButtonActionPerformed
        Flight[] results = flightSearch.search(depFlightDatePicker.getDate(), brief(fromFlightComboBox.getSelectedItem().toString()), brief(toFlightComboBox.getSelectedItem().toString()));
        createFlightTable(results);
    }//GEN-LAST:event_flightSearchButtonActionPerformed

    private void oneWayCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneWayCheckBoxActionPerformed
        oneWay();
    }//GEN-LAST:event_oneWayCheckBoxActionPerformed

    private void nextFromFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextFromFlightButtonActionPerformed
        addSelectedFlights();
        showPanel(hotelsPanel);
    }//GEN-LAST:event_nextFromFlightButtonActionPerformed

    private void hotelSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelSearchButtonActionPerformed
        Hotel[] results = hotelSearch.search(arrHotelDatePicker.getDate(), locationHotelComboBox.getSelectedItem().toString());
        createHotelTable(results);
    }//GEN-LAST:event_hotelSearchButtonActionPerformed

    private void nextFromHotelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextFromHotelButtonActionPerformed
        addSelectedHotel();
        showPanel(dayTourPanel);
    }//GEN-LAST:event_nextFromHotelButtonActionPerformed

    private void dayTourSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dayTourSearchButtonActionPerformed
        DayTour[] results = dayTourSearch.search(dayTourDatePicker.getDate(),destinationTourComboBox.getSelectedItem().toString());
        createDayTourTable(results);
    }//GEN-LAST:event_dayTourSearchButtonActionPerformed

    private void nextFromDayTourButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextFromDayTourButtonActionPerformed
        addSelectedDayTours();
        System.out.println(bookingManager.getBookings().daytour.get(0).trip);
    }//GEN-LAST:event_nextFromDayTourButtonActionPerformed

    private void roomHotelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roomHotelComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_roomHotelComboBoxActionPerformed

    private void numberOfTicketsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numberOfTicketsComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numberOfTicketsComboBoxActionPerformed

    private void depFlightDatePickerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depFlightDatePickerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_depFlightDatePickerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Window.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Window().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> adultTourComboBox;
    private javax.swing.JComboBox<String> adultsHotelComboBox;
    private org.jdesktop.swingx.JXDatePicker arrFlightDatePicker;
    private org.jdesktop.swingx.JXDatePicker arrHotelDatePicker;
    private javax.swing.JPanel bookPanel;
    private javax.swing.JComboBox<String> childrenHotelComboBox;
    private javax.swing.JComboBox<String> childrenTourComboBox;
    private org.jdesktop.swingx.painter.CompoundPainter compoundPainter1;
    private javax.swing.JPanel customerPanel;
    private org.jdesktop.swingx.JXDatePicker dayTourDatePicker;
    private javax.swing.JPanel dayTourPanel;
    private javax.swing.JTable dayTourResultsTable;
    private javax.swing.JButton dayTourSearchButton;
    private org.jdesktop.swingx.JXDatePicker depFlightDatePicker;
    private org.jdesktop.swingx.JXDatePicker depHotelDatePicker;
    private javax.swing.JComboBox<String> destinationTourComboBox;
    private javax.swing.JTable flightResultTable;
    private javax.swing.JButton flightSearchButton;
    private javax.swing.JPanel flightsPanel;
    private javax.swing.JComboBox<String> fromFlightComboBox;
    private javax.swing.JTable hotelResultTable;
    private javax.swing.JButton hotelSearchButton;
    private javax.swing.JPanel hotelsPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JComboBox<String> locationHotelComboBox;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JButton nextFromDayTourButton;
    private javax.swing.JButton nextFromFlightButton;
    private javax.swing.JButton nextFromHotelButton;
    private javax.swing.JComboBox<String> numberOfTicketsComboBox;
    private javax.swing.JCheckBox oneWayCheckBox;
    private javax.swing.JComboBox<String> roomHotelComboBox;
    private javax.swing.JComboBox<String> toFlightComboBox;
    private javax.swing.JComboBox<String> tripTourComboBox;
    // End of variables declaration//GEN-END:variables
    
    private void init() {
        flightResultTable.getColumnModel().getColumn(0).setMinWidth(0);
        flightResultTable.getColumnModel().getColumn(0).setMaxWidth(0);
        
        hotelResultTable.getColumnModel().getColumn(0).setMinWidth(0);
        hotelResultTable.getColumnModel().getColumn(0).setMaxWidth(0);
        
        dayTourResultsTable.getColumnModel().getColumn(0).setMinWidth(0);
        dayTourResultsTable.getColumnModel().getColumn(0).setMaxWidth(0);
        
        depFlightDatePicker.setDate(new Date());
    }
    
    private void createFlightTable(Flight[] x) {
        DefaultTableModel model = (DefaultTableModel) flightResultTable.getModel();
        model.setRowCount(0);
        if(x==null) return;
        
        for(int i=0; i<x.length; i++){
            if(x[i]==null){return;}
            model.addRow(toObj(x[i],i));
        }
    }
    
    private void oneWay(){
        if(oneWayCheckBox.isSelected())
            arrFlightDatePicker.setEnabled(false);
        else
            arrFlightDatePicker.setEnabled(true);
    }
    
    private void addSelectedFlights() {
        for (int i = 0; i < flightResultTable.getRowCount(); i++) {
            boolean isChecked = (Boolean) flightResultTable.getValueAt(i, 6);

            if (isChecked) {
                int index = (int) flightResultTable.getValueAt(i, 0);
                Flight tmp = flightSearch.getFlight(index);
                bookingManager.addFlight(tmp);
            }

        }
    }
    
    private void showPanel(JPanel panel){
        mainTabbedPane.setSelectedComponent(panel);
    }
    
    private void createHotelTable(Hotel[] x){
        DefaultTableModel model = (DefaultTableModel) hotelResultTable.getModel();
        model.setRowCount(0);
        if(x==null) return;
        
        for(int i=0; i<x.length; i++){
            if(x[i]==null){return;}
            model.addRow(hToObj(x[i],i));
        }
    }
    
    private void addSelectedHotel() {
        for (int i = 0; i < hotelResultTable.getRowCount(); i++) {
            boolean isChecked = (Boolean) hotelResultTable.getValueAt(i, 4);

            if (isChecked) {
                int index = (int) hotelResultTable.getValueAt(i, 0);
                Hotel tmp = hotelSearch.getHotel(index);
                bookingManager.setHotel(tmp);
            }

        }
    }
    
    private void createDayTourTable(DayTour[] x){
        DefaultTableModel model = (DefaultTableModel) dayTourResultsTable.getModel();
        model.setRowCount(0);
        if(x==null) return;
        
        for(int i=0; i<x.length; i++){
            if(x[i]==null){return;}
            model.addRow(dToObj(x[i],i));
        }
    }
    
        private void addSelectedDayTours() {
        for (int i = 0; i < dayTourResultsTable.getRowCount(); i++) {
            boolean isChecked = (Boolean) dayTourResultsTable.getValueAt(i, 5);

            if (isChecked) {
                int index = (int) dayTourResultsTable.getValueAt(i, 0);
                DayTour tmp = dayTourSearch.getDayTour(index);
                bookingManager.addDayTour(tmp);
            }

        }
    }
    
    //------------------- Hjálparföll ------------------------------
    private Object[] toObj(Flight x,int i){
        return new Object[]{i,x.airline,x.departure+x.from,
                x.arrival+x.to,x.duration,x.price,false};
    }
    
    private String brief(String x){
        if("Akureyri".equals(x))
            return "aey";
        else if("Reykjavík".equals(x))
            return "rvk";
        return "";
    }
    
    private Object[] hToObj(Hotel x, int i){
        return new Object[]{i,x.name,x.city,x.price,false};
    }
    
    private Object[] dToObj(DayTour x, int i){
        return new Object[]{i,x.trip,x.city,x.time,x.price,false};
    }
    
    private void echo(Object o){
        System.out.println(o);
    }
    //----------------------------------------------------------------
    
    
}
